) +
theme_minimal(base_family = "Cambria") +
theme(panel.background = element_rect(fill = "cornsilk"))
library(ggdist)
library(ggplot2)
contin_plot <- ggplot(data, aes(x = iq)) +
stat_halfeye(
fill = "blue",
alpha = 0.6,
size = 1.5,
position = "identity",
.width = 0.9  # Correct parameter for confidence interval width
) +
stat_halfeye(
aes(size = 1),
fill = "red",
alpha = 0.8,
.width = 0.8  # Adjusted confidence interval width
) +
stat_halfeye(
aes(size = 0.5),
fill = "gray",
alpha = 0.7,
.width = 0.7  # Adjusted confidence interval width
) +
labs(title = "Continuous Distribution of IQ Scores",
x = "IQ Scores",
y = "Density") +
theme_minimal(base_family = "Cambria") +
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.title = element_text(size = 14))
print(box_plot)
print(density_plot)
print(hist_plot)
print(dot_plot)
print(contin_plot)
print(box_plot)
print(density_plot)
print(hist_plot)
print(dot_plot)
print(contin_plot)
#file 2
library (ggplot2)
#file 2
library (ggplot2)
library (ggdist)
library(dplyr)
print(box_plot)
source("~/.active-rstudio-document", echo=TRUE)
setwd("~/R_4_beginners")
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/R_4_beginners/week_3_ely.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/R_4_beginners/week_3_ely.R", echo=TRUE)
# Print all plots to the PDF
print(box_plot)
print(density_plot)
print(hist_plot)
print(dot_plot)
print(contin_plot)  # Assuming you have contin_plot defined
data <- data |> mutate(density = dnorm(iq, mean = 100, sd = 15))
ggplot(data, aes(x = iq, thickness = density)) +
geom_slab() +
xlim(50,150) + ylab("desnity") +
theme_classic()
View(data)
ggplot(data, aes(x = iq, thickness = density)) +
geom_histogram() +
xlim(50,150) + ylab("desnity") +
theme_classic()
ggplot(data, aes(x = iq, thickness = density)) +
geom_histogram() +
xlim(50,150) + ylab("Normalized Density") +xlab("IQ Scores")
ggplot(data, aes(x = iq, thickness = density)) +
geom_histogram() +
xlim(x_min, x_max) + ylab("Normalized Density") +xlab("IQ Scores")+
theme_classic()
ggplot(data, aes(x = iq, thickness = density)) +
geom_histogram() +
xlim(x_min, x_max) + ylab("Normalized Density") + xlab("IQ Scores") +
theme_classic()
ggplot(data, aes(x = iq, thickness = density)) +
geom_histogram() +
xlim(x_min, x_max) + ylab("Normalized Density") + xlab("IQ Scores")
ggplot(data, aes(x = iq, thickness = density)) +
geom_histogram() +
xlim(x_min, x_max) + ylab("Normalized Density") + xlab("IQ Scores") +theme_minimal()
library(dplyr)
library(readxl)
setwd(getSrcDirectory(function(){})[1])
setwd("~/Downloads/R_course/mydata/Process_Data")
library(readxl)
setwd(getSrcDirectory(function(){})[1])
getSrcDirectory(function(){})[1]
getSrcDirectory(function(){})
getSrcDirectory()
library(readxl)
edv_messages <- read_excel("xl_files/EDV_messages.xlsx") |>
select(CURRENT_MSG_TEXT, CURRENT_MSG_TIME, DATA_FILE, CURRENT_MSG_FIX_X, TRIAL_INDEX)
messages <- data.frame(index_trial = character(),
type_trial = character(),
id = character(),
stimulus = character(),
answer = logical(),
early_end = logical(),
stringsAsFactors = FALSE)
trial_groups <- edv_messages |> group_by(TRIAL_INDEX, DATA_FILE) |> group_split()
for (group in trial_groups) {
if (!(startsWith(group$CURRENT_MSG_TEXT[1], "TRIALID ") &
startsWith(tail(group$CURRENT_MSG_TEXT, 1), "TRIAL_RESULT"))) {
cat("Skipping TRIAL_INDEX:", unique(group$TRIAL_INDEX), "DATA_FILE:", unique(group$DATA_FILE), "\n")
next
}
trialid_row <- group |> filter(startsWith(CURRENT_MSG_TEXT, "TRIALID "))
type_trial <- strsplit(trialid_row$CURRENT_MSG_TEXT, " ")[[1]][2]
id <- trialid_row$DATA_FILE[1]
fill_msg <- group |> filter(startsWith(CURRENT_MSG_TEXT, "FILL "))
stimulus <- if (nrow(fill_msg) > 0) gsub("\\D", "", fill_msg$CURRENT_MSG_TEXT[1]) else NA
trial_result_row <- group |> filter(startsWith(CURRENT_MSG_TEXT, "TRIAL_RESULT "))
if (nrow(trial_result_row) > 0) {
result_text <- sub("TRIAL_RESULT ", "", trial_result_row$CURRENT_MSG_TEXT)
answer <- ifelse(substr(result_text, 1, 1) == "0", FALSE,
ifelse(substr(result_text, 1, 1) == "1", TRUE, NA))
early_end <- ifelse(as.numeric(trial_result_row$CURRENT_MSG_FIX_X[1]) > 700, TRUE, FALSE)
messages <- rbind(messages, data.frame(
index_trial = unique(group$TRIAL_INDEX),
type_trial = type_trial,
id = id,
stimulus = stimulus,
answer = answer,
early_end = early_end,
stringsAsFactors = FALSE
))
}
}
warnings()
debugSource("~/Downloads/R_course/mydata/Process_Data/get_messages.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/get_messages.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/get_messages.R", echo=TRUE)
View(messages)
source("~/Downloads/R_course/mydata/Process_Data/get_messages.R", echo=TRUE)
View(messages)
debugSource("~/Downloads/R_course/mydata/Process_Data/get_messages.R", echo=TRUE)
Q
source("~/Downloads/R_course/mydata/Process_Data/get_messages.R", echo=TRUE)
View(messages)
len <- nchar(stimulus)
len <- str_length((stimulus)
len
len
len <- str_length((stimulus)
)
len <- str_length(stimulus)
source("~/Downloads/R_course/mydata/Process_Data/get_messages.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/get_messages.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/get_messages.R", echo=TRUE)
View(messages)
messages<-messages[messages$type_stimulus == 'passive']
messages <- messages[messages$type_stimulus == 'passive,]
View(messages)
messages <- messages[messages$type_stimulus == 'passive',]
messages <- messages[messages$type_stimulus == 'passive',]
View(messages)
source("~/Downloads/R_course/mydata/Process_Data/get_messages.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/get_messages.R", echo=TRUE)
View(messages)
source("~/Downloads/R_course/mydata/Process_Data/get_messages.R", echo=TRUE)
debugSource("~/Downloads/R_course/mydata/Process_Data/get_fixations.R", echo=TRUE)
debugSource("~/Downloads/R_course/mydata/Process_Data/get_fixations.R", echo=TRUE)
View(messages)
source("~/Downloads/R_course/mydata/Process_Data/get_fixations.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/get_fixations.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/get_fixations.R", echo=TRUE)
fixations_2 <- fixations
source("~/Downloads/R_course/mydata/Process_Data/get_fixations.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/get_fixations.R", echo=TRUE)
View(fixations_2)
fixations <- messages|>
left_join(fixations, by = c("stimulus_id_trial", "session")) |>
mutate(
index_trial = coalesce(index_trial.x, index_trial.y),
type_stimulus = coalesce(type_stimulus.x, type_stimulus.y)) |>
select(-index_trial.y, -type_stimulus.y) #  double columns
source("~/Downloads/R_course/mydata/Process_Data/get_fixations.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/get_messages.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/get_messages.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/get_fixations.R", echo=TRUE)
View(fixations_1)
source("~/Downloads/R_course/mydata/Process_Data/get_messages.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/get_fixations.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/get_fixations.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/get_fixations.R", echo=TRUE)
View(fixations)
source("~/Downloads/R_course/mydata/Process_Data/get_fixations.R", echo=TRUE)
View(fixations)
source("~/Downloads/R_course/mydata/Process_Data/get_messages.R", echo=TRUE)
View(messages)
source("~/Downloads/R_course/mydata/Process_Data/get_fixations.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/get_fixations.R", echo=TRUE)
View(fixations)
fixations <- messages |>
left_join(select(fixations, -index_trial, -type_stimulus),
by = c("stimulus_id_trial", "session"))
source("~/Downloads/R_course/mydata/Process_Data/get_messages.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/get_fixations.R", echo=TRUE)
View(fixations)
source("~/Downloads/R_course/mydata/Process_Data/get_saccades.R", echo=TRUE)
View(saccades)
View(fixations)
library(ggplot2)
library(ggpubr)
library(magick)
library(dplyr)
# Function to visualize fixation density heatmap per condition
visualize_fixation_heatmap <- function(df, image_list) {
if (!dir.exists("plots/heatmaps")) {
dir.create("plots/heatmaps", recursive = TRUE)
}
for (image_num in image_list) {
df_filtered <- df |> filter(length_stimulus == image_num)
if (nrow(df_filtered) == 0) next
img_path <- paste0("images/", image_num, ".png")
if (!file.exists(img_path)) next
img <- image_read(img_path)
img_gg <- ggplot() + background_image(img)
heatmap_plot <- img_gg +
stat_density2d_filled(aes(x = x, y = y, fill = ..level.., alpha = ..level..),
data = df_filtered, geom = "polygon") +
scale_fill_viridis_c() +
scale_alpha(range = c(0.3, 0.8)) +
scale_x_continuous(limits = c(0, 1920), expand = c(0, 0)) +
scale_y_reverse(limits = c(1080, 0), expand = c(0, 0)) +
ggtitle(paste("Fixation Heatmap for Stimulus:", image_num)) +
theme_minimal()
ggsave(filename = paste0("plots/heatmaps/", image_num, ".png"), plot = heatmap_plot,
width = 680/40, height = 420/40, units = "in")
}
}
# Define the images to visualize
image_list <- c(458, 42836, 9546, 973248)
setwd("~/Downloads/R_course/mydata/visualizer")
# Define the images to visualize
image_list <- c(458, 42836, 9546, 973248)
# Call the function
visualize_fixation_heatmap(fixations, image_list)
debugSource("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
df_filtered <- df |> filter(length_stimulus == image_num)
df_filtered <- df |> filter(length_stimulus == nchar(image_num))
if (nrow(df_filtered) == 0) next
img_path <- paste0("images/", image_num, ".png")
if (!file.exists(img_path)) next
img <- image_read(img_path)
img_gg <- ggplot() + background_image(img)
heatmap_plot <- img_gg +
stat_density2d_filled(aes(x = x, y = y, fill = ..level.., alpha = ..level..),
data = df_filtered, geom = "polygon") +
scale_fill_viridis_c() +
scale_alpha(range = c(0.3, 0.8)) +
scale_x_continuous(limits = c(0, 1920), expand = c(0, 0)) +
scale_y_reverse(limits = c(1080, 0), expand = c(0, 0)) +
ggtitle(paste("Fixation Heatmap for Stimulus:", image_num)) +
theme_minimal()
ggsave(filename = paste0("plots/heatmaps/", image_num, ".png"), plot = heatmap_plot,
width = 680/40, height = 420/40, units = "in")
ggsave(filename = paste0("plots/heatmaps/", image_num, ".png"), plot = heatmap_plot,
width = 680/40, height = 420/40, units = "in")
ggsave(filename = paste0("plots/heatmaps/", image_num, ".png"), plot = heatmap_plot,
width = 680/40, height = 420/40, units = "in")
Q
debugSource("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
View(fixations)
fixations_n <- fixations |>
mutate(
x = as.numeric(x),
y = as.numeric(y),
pupil_size = as.numeric(pupil_size),
duration = as.numeric(duration),
dist_nearest_iarea = as.numeric(dist_nearest_iarea),
start_t = as.numeric(start_t),
end_t = as.numeric(end_t)
)
# Call the function
visualize_fixation_heatmap(fixations_n, image_list)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
fixations_n <- fixations_n[fixations_n$index_in_trial<4]
fixations_n <- fixations_n[fixations_n$index_in_trial<4]
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
Q
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
debugSource("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
img <- image_read(img_path)
print(img)
debugSource("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
fixations_n <- fixations |>
mutate(
length_stimulus = as.numeric(length_stimulus),
x = as.numeric(x),
y = 1080 - as.numeric(y),
pupil_size = as.numeric(pupil_size),
duration = as.numeric(duration),
dist_nearest_iarea = as.numeric(dist_nearest_iarea),
start_t = as.numeric(start_t),
end_t = as.numeric(end_t)
)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
warnings()
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
warnings()
heatmap_plot <- ggplot(df_fixation, aes(x = x, y = y, weight = duration)) +
annotation_raster(img, xmin = 0, xmax = 1920, ymin = 0, ymax = 1080) +
stat_density2d(geom = "polygon", aes(fill = ..level..), alpha = 0.3,) +
geom_point(size = 0.05, color = "black") +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0.1, 0.9)) +
scale_x_continuous(limits = c(0, 1920), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 1080), expand = c(0, 0)) + coord_fixed()
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
View(fixations_n)
fixations_n <- fixations |>
mutate(
length_stimulus = as.numeric(length_stimulus),
x = as.numeric(x),
y = 1080 - as.numeric(y),
pupil_size = as.numeric(pupil_size),
duration = as.numeric(duration),
dist_nearest_iarea = as.numeric(dist_nearest_iarea),
start_t = as.numeric(start_t),
end_t = as.numeric(end_t)
) |>
group_by(length_stimulus, index_in_trial) |>
mutate(duration_sd = sd(duration, na.rm = TRUE)) |>  # Compute SD per group
ungroup() |>
mutate(duration = duration / duration_sd)  # Normalize duration
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
debugSource("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
View(df_fixation)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
View(fixations)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
debugSource("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
debugSource("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
debugSource("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
debugSource("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
debugSource("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
debugSource("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
debugSource("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
debugSource("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
debugSource("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/temp.R", echo=TRUE)
setwd("~/Downloads/R_course/mydata/visualizer")
source("~/Downloads/R_course/mydata/visualizer/aggregate_fixations_heatmap.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/aggregate_fixations_heatmap.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/aggregate_fixations_heatmap.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/aggregate_fixations_heatmap.R", echo=TRUE)
source("~/Downloads/R_course/mydata/visualizer/aggregate_fixations_heatmap.R", echo=TRUE)
source("~/Downloads/R_course/mydata/plot_makers/aggregate_fixations_heatmap.R", echo=TRUE)
source("~/Downloads/R_course/mydata/plot_makers/aggregate_fixations_heatmap.R", echo=TRUE)
source("~/Downloads/R_course/mydata/plot_makers/single_trial_visualizer.R", echo=TRUE)
source("~/Downloads/R_course/mydata/plot_makers/single_trial_visualizer.R", echo=TRUE)
source("~/Downloads/R_course/mydata/plot_makers/aggregate_fixations_heatmap.R", echo=TRUE)
source("~/Downloads/R_course/mydata/plot_makers/aggregate_fixations_heatmap.R", echo=TRUE)
setwd("~/Downloads/R_course/mydata/Process_Data")
source("~/Downloads/R_course/mydata/Process_Data/get_saccades.R", echo=TRUE)
setwd("~/Downloads/R_course/mydata/Process_Data")
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
View(group)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
View(indexed_saccades)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
View(saccades)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
View(indexed_saccades)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
dplyr::last_dplyr_warnings()
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
View(messages)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
dplyr::last_dplyr_warnings()
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
dplyr::last_dplyr_warnings()
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
View(indexed_saccades)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
indexed_saccades[length_stimulus == 3]
indexed_saccades$end_x[length_stimulus == 3]
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
indexed_saccades$dist_from_comma[length_stimulus == 3]
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
cols(indexed_saccades)
columns(indexed_saccades)
col(indexed_saccades)
colnames(indexed_saccades)
source("~/.active-rstudio-document", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/Downloads/R_course/mydata/Process_Data/indexed_saccades.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
