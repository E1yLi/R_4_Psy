) +
stat_halfeye(
aes(size = 1),
fill = "red",
alpha = 0.8,
.width = 0.8  # Adjusted confidence interval width
) +
stat_halfeye(
aes(size = 0.5),
fill = "gray",
alpha = 0.7,
.width = 0.7  # Adjusted confidence interval width
) +
labs(title = "Continuous Distribution of IQ Scores",
x = "IQ Scores",
y = "Density") +
theme_minimal(base_family = "Cambria") +
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.title = element_text(size = 14))
print(box_plot)
print(density_plot)
print(hist_plot)
print(dot_plot)
print(contin_plot)
print(box_plot)
print(density_plot)
print(hist_plot)
print(dot_plot)
print(contin_plot)
#file 2
library (ggplot2)
#file 2
library (ggplot2)
library (ggdist)
library(dplyr)
print(box_plot)
source("~/.active-rstudio-document", echo=TRUE)
setwd("~/R_4_beginners")
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/R_4_beginners/week_3_ely.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/R_4_beginners/week_3_ely.R", echo=TRUE)
# Print all plots to the PDF
print(box_plot)
print(density_plot)
print(hist_plot)
print(dot_plot)
print(contin_plot)  # Assuming you have contin_plot defined
data <- data |> mutate(density = dnorm(iq, mean = 100, sd = 15))
ggplot(data, aes(x = iq, thickness = density)) +
geom_slab() +
xlim(50,150) + ylab("desnity") +
theme_classic()
View(data)
ggplot(data, aes(x = iq, thickness = density)) +
geom_histogram() +
xlim(50,150) + ylab("desnity") +
theme_classic()
ggplot(data, aes(x = iq, thickness = density)) +
geom_histogram() +
xlim(50,150) + ylab("Normalized Density") +xlab("IQ Scores")
ggplot(data, aes(x = iq, thickness = density)) +
geom_histogram() +
xlim(x_min, x_max) + ylab("Normalized Density") +xlab("IQ Scores")+
theme_classic()
ggplot(data, aes(x = iq, thickness = density)) +
geom_histogram() +
xlim(x_min, x_max) + ylab("Normalized Density") + xlab("IQ Scores") +
theme_classic()
ggplot(data, aes(x = iq, thickness = density)) +
geom_histogram() +
xlim(x_min, x_max) + ylab("Normalized Density") + xlab("IQ Scores")
ggplot(data, aes(x = iq, thickness = density)) +
geom_histogram() +
xlim(x_min, x_max) + ylab("Normalized Density") + xlab("IQ Scores") +theme_minimal()
source("~/Downloads/R_course/mydata/visualizer.R", echo=TRUE)
setwd("~/Downloads/R_course/mydata")
source("~/Downloads/R_course/mydata/visualizer.R", echo=TRUE)
View(saccades)
source("~/Downloads/R_course/mydata/visualizer/df_for_vis.R", echo=TRUE)
setwd("~/Downloads/R_course/mydata/visualizer")
source("~/Downloads/R_course/mydata/visualizer/df_for_vis.R", echo=TRUE)
View(trials)
debugSource("~/Downloads/R_course/mydata/visualizer/df_for_vis.R", echo=TRUE)
debugSource("~/Downloads/R_course/mydata/visualizer/df_for_vis.R", echo=TRUE)
View(saccades)
source("~/Downloads/R_course/mydata/visualizer/df_for_vis.R", echo=TRUE)
dplyr::last_dplyr_warnings()
View(saccades)
saccades <- load("saccades.RData")
saccades <- load("saccades.RData")
source("~/Downloads/R_course/mydata/visualizer/df_for_vis.R", echo=TRUE)
setwd("~/Downloads/R_course/mydata/visualizer")
saccades <- load("saccades.RData")
saccades <- load.Rdata("saccades.RData")
saccades <- load("saccades.RData")
load("saccades.RData")
library(magick)
library(dplyr)
library(ggplot2)
library(readxl)
library(grid)
images_path <- "images/"
plots_path <- "plots/single_trial_plots/"
arrow_width <- 0.4
arrow_color <- "cyan"
arrow_tip_size <- 0.14
fixation_fill <- NA
fixation_line_width <- 0.3
fixation_color <- "lightblue"
fixation_diameter <- 8
load("saccades.RData")
visualize_trial <- function(df, image_list) {
if (!dir.exists(plots_path)) {
dir.create(plots_path, recursive = TRUE)
}
for (image_num in image_list) {
df_trial <- df |> filter(IMAGE_PATH == paste0(images_path, as.character(image_num), ".png"))
if (nrow(df_trial) == 0) next
img_path <- df_trial$IMAGE_PATH[1]
if (!file.exists(img_path)) next
img <- image_read(img_path)
img_gg <- ggplot() + background_image(img)
p <- img_gg +
geom_segment(aes(x = CURRENT_SAC_START_X, y = CURRENT_SAC_START_Y,
xend = CURRENT_SAC_END_X, yend = CURRENT_SAC_END_Y),
data = df_trial,
arrow = arrow(length = unit(arrow_tip_size, "cm")),
color = arrow_color,
linewidth = arrow_width) +
geom_point(aes(x = NEXT_FIX_X, y = NEXT_FIX_Y),
data = df_trial,
color = fixation_color,
fill = fixation_fill,
shape = 21,
stroke = fixation_line_width,
size = fixation_diameter) +
scale_x_continuous(limits = c(0, 1920), expand = c(0, 0)) +
scale_y_reverse(limits = c(1080, 0), expand = c(0, 0)) +
ggtitle(paste("Trial:", image_num))
ggsave(filename = paste0(plots_path, image_num, ".png"), plot = p, limitsize = FALSE, width = 680 / 40, height = 420 / 40)
}
}
image_list <- c(458, 42836, 9546, 973248)
visualize_trial(saccades, image_list)
library(dplyr)
library(ggpubr)
library(grid)
setwd(getSrcDirectory(function(){})[1])
load("saccades.Rdata")
nSaccades <- saccades |>
filter(TYPE == "passive") |>
group_by(ID, nNum) |>
summarise(observations = n(), .groups = "drop") |>
mutate(length = nchar(as.character(nNum))) |>
group_by(length) |>
summarise(observations = list(observations), .groups = "drop") |>
rename_with(~ paste0("len", .), everything())
p <- ggplot(stack(nSaccades), aes(x = ind, y = values)) +
geom_boxplot() +
geom_jitter(width = 0.2, color = "blue") +
labs(x = "Saccade Number Length", y = "Observations", title = "Saccade Count by Length")
setwd(getSrcDirectory(function(){})[1])
load("saccades.RData")
saccades_summary <- saccades |>
filter(TYPE == "passive") |>
mutate(length = nchar(as.character(nNum))) |>
group_by(length) |>
summarise(
num_observations = n(),
avg_saccades = mean(num_observations),
sd_saccades = sd(num_observations),
.groups = "drop"
)
saccades_summary
library(tidyr)
tidy(saccades_summary)
saccades <- saccades |>
filter(NAME != "UNDEFINED") |>
mutate(NAME = gsub("\\.0$", "", NAME)) |>
rowwise() |>
mutate(nNum = trials$nNum[which(trials$index == NAME)[1]],
IMAGE_PATH = ifelse(!is.na(nNum),
paste0("images/", nNum, ".png"),
paste0("images/", trials$attCheck[which(trials$index == NAME)[1]], ".png"))) |>
ungroup()
saccades_summary <- saccades |>
filter(TYPE == "passive") |>
mutate(length = nchar(as.character(nNum))) |>
group_by(ID, nNum) |>
mutate(num_observations = n()) |>
ungroup() |>
group_by(length) |>
summarise(
num_observations = n(),
avg_saccades = mean(num_observations),
sd_saccades = sd(num_observations),
.groups = "drop"
)
saccades_summary
View(saccades_summary)
saccades_summary <- saccades |>
filter(TYPE == "passive") |>
mutate(length = nchar(as.character(nNum))) |>
group_by(ID, nNum) |>
mutate(num_observations = n()) |>
ungroup()
saccades_summary
View(saccades_summary)
saccades_summary|>
group_by(length) |>
summarise(
num_observations = n(),
avg_saccades = mean(num_observations),
sd_saccades = sd(num_observations) )
saccades_summary|>
group_by(length) |>
summarise(N = n(),
mean = mean(num_observations),
std = sd(num_observations) )
zipped_saccades <- saccades |>  group_by(nNum,ID) |> mutate(nSacs = n())
View(nSaccades)
View(zipped_saccades)
load("saccades.RData")
load("saccades.RData")
saccades |> filter(TYPE == "passive")
saccades_summary <- saccades|>
mutate(length = nchar(as.character(nNum))) |>
group_by(ID, nNum) |>
mutate(num_observations = n()) |>
ungroup()
zipped_saccades <- saccades |>  group_by(nNum,ID) #|> mutate(nSacs = n())
saccades_grouped <- saccades |>
group_by(ID, nNum) |>
summarise(totalSacs = n(), .groups = "drop")
View(saccades_grouped)
library(dplyr)
library(readxl)
setwd(getSrcDirectory(function(){})[1])
setwd('..')
saccades <- read_excel("saccades.xlsx")
saccades <- saccades[saccades$ID != 0,]
trials <- read_excel("conditions.xlsx")
saccades <- saccades |>
filter(NAME != "UNDEFINED") |>
mutate(NAME = gsub("\\.0$", "", NAME)) |>
rowwise() |>
mutate(nNum = trials$nNum[which(trials$index == NAME)[1]],
IMAGE_PATH = ifelse(!is.na(nNum),
paste0("images/", nNum, ".png"),
paste0("images/", trials$attCheck[which(trials$index == NAME)[1]], ".png"))) |>
ungroup()
saccades <- saccades |>
mutate_at(vars(CURRENT_SAC_START_X, CURRENT_SAC_START_Y,
CURRENT_SAC_END_X, CURRENT_SAC_END_Y,
NEXT_FIX_X, NEXT_FIX_Y), as.numeric)
save(saccades, file = "visualizer/saccades.RData")
load("saccades.RData")
saccades |> filter(TYPE == "passive")
View(saccades_summary)
View(saccades)
library(dplyr)
library(ggplot2)
library(tidyr)
setwd(getSrcDirectory(function(){})[1])
load("saccades.RData")
saccades |> filter(TYPE == "passive")
View(saccades)
saccades_summary < saccades |>
group_by(ID, nNum) |>
summarise(totalSacs = n(), .groups = "drop")
saccades_summary <- saccades |>
group_by(ID, nNum) |>
summarise(totalSacs = n(), .groups = "drop")
View(saccades_summary)
saccades_summary <- saccades |>
group_by(ID, nNum) |>
summarise(totalSacs = n(), .groups = "drop")|>mutate(len=length(nNum))
View(saccades_summary)
group_by(ID, nNum) |>
summarise(totalSacs = n(), .groups = "drop")|>mutate(len=length(nNum))
View(saccades_summary)
saccades_summary <- saccades |> muatate(nNum = as.charcter(nNum))|>
group_by(ID, nNum) |>
summarise(totalSacs = n(), .groups = "drop")|>mutate(len=length(nNum))
saccades_summary <- saccades |> muatate(nNum = as.charcter(nNum))|>
group_by(ID, nNum) |>
summarise(totalSacs = n(), .groups = "drop")|>mutate(len=length(nNum))
saccades_summary <- saccades |> mutate(nNum = as.charct er(nNum))|>
saccades_summary <- saccades |> mutate(nNum = as.charcter(nNum))|>
group_by(ID, nNum) |>
summarise(totalSacs = n(), .groups = "drop")|> mutate(len=length(nNum))
saccades_summary <- saccades |> mutate_if(nNum, as.character)|>
group_by(ID, nNum) |>
summarise(totalSacs = n(), .groups = "drop")|> mutate(len=length(nNum))
saccades_summary <- saccades |> mutate_if(is.nNum, as.character)|>
group_by(ID, nNum) |>
summarise(totalSacs = n(), .groups = "drop")|> mutate(len=length(nNum))
saccades_summary <- saccades |> mutate(nNum = as.character(nNum))|>
group_by(ID, nNum) |>
summarise(totalSacs = n(), .groups = "drop")|> mutate(len=length(nNum))
View(saccades_summary)
saccades_summary <- saccades |> mutate(nNum = as.character(nNum))
saccades_summary <- saccades |> mutate(nNum = as.character(nNum))|>
group_by(ID, nNum) |>
summarise(totalSacs = n(), .groups = "drop")|> mutate(len=nchar(nNum))
saccades_summary|>
group_by(len) |>
summarise(N = n(),
mean = mean(),
std = sd() )
saccades_summary|>
group_by(len) |>
summarise(N = n(),
mean = mean(totalSacs),
std = sd(totalSacs ) )
load("saccades.RData")
saccades |> filter(TYPE == "passive")
View(saccades)
saccades<-saccades |> filter(TYPE == "passive")
View(saccades)
saccades_summary <- saccades |> mutate(nNum = as.character(nNum))|>
group_by(ID, nNum) |>
summarise(totalSacs = n(), .groups = "drop")|> mutate(len=nchar(nNum))
saccades_summary <- saccades |> mutate(nNum = as.character(nNum))|>
group_by(nNum,ID) |>
summarise(totalSacs = n(), .groups = "drop")|> mutate(len=nchar(nNum))
saccades_summary <- saccades |> mutate(nNum = as.character(nNum))|>
group_by(nNum,ID) |>
summarise(totalSacs = n())|> mutate(len=nchar(nNum))
saccades_summary <- saccades |> mutate(nNum = as.character(nNum))|>
group_by(ID,nNum) |>
summarise(totalSacs = n()) |> mutate(len=nchar(nNum))
saccades_summary <- saccades |> mutate(nNum = as.character(nNum))|>
group_by(ID,nNum) |>
mutate(totalSacs = n()) |> mutate(len=nchar(nNum))
saccades_summary <- saccades |> mutate(nNum = as.character(nNum))|>
group_by(ID,nNum) |>
summarise(totalSacs = n(),.groups="drop_last") |> mutate(len=nchar(nNum))
saccades_summary <- saccades |> mutate(nNum = as.character(nNum))|>
group_by(ID,nNum) |>
summarise(totalSacs = n(),.groups="drop_last") |> mutate(len=nchar(nNum))
View(saccades)
load("saccades.RData")
setwd(getSrcDirectory(function(){})[1])
setwd('..')
saccades <- read_excel("saccades.xlsx")
saccades <- saccades[saccades$ID != 0,]
trials <- read_excel("conditions.xlsx")
saccades <- saccades |>
filter(NAME != "UNDEFINED") |>
mutate(NAME = gsub("\\.0$", "", NAME)) |>
rowwise() |>
mutate(nNum = trials$nNum[which(trials$index == NAME)[1]],
IMAGE_PATH = ifelse(!is.na(nNum),
paste0("images/", nNum, ".png"),
paste0("images/", trials$attCheck[which(trials$index == NAME)[1]], ".png"))) |>
ungroup()
saccades <- read_excel("saccades.xlsx")
library(readxl)
setwd(getSrcDirectory(function(){})[1])
setwd("~/Downloads/R_course/mydata/visualizer")
setwd('..')
saccades <- read_excel("saccades.xlsx")
saccades <- saccades |>
filter(ID %in% c("A", "B"))
trials <- read_excel("conditions.xlsx")
saccades <- saccades |>
filter(NAME != "UNDEFINED") |>
mutate(NAME = gsub("\\.0$", "", NAME)) |>
rowwise() |>
mutate(nNum = trials$nNum[which(trials$index == NAME)[1]],
IMAGE_PATH = ifelse(!is.na(nNum),
paste0("images/", nNum, ".png"),
paste0("images/", trials$attCheck[which(trials$index == NAME)[1]], ".png"))) |>
ungroup()
saccades <- saccades |>
mutate_at(vars(CURRENT_SAC_START_X, CURRENT_SAC_START_Y,
CURRENT_SAC_END_X, CURRENT_SAC_END_Y,
NEXT_FIX_X, NEXT_FIX_Y), as.numeric)
save(saccades, file = "visualizer/saccades.RData")
(dplyr)
(dplyr)
(dplyr)
(dplyr)
(dplyr)
library(ggplot2)
library(tidyr)
setwd(getSrcDirectory(function(){})[1])
setwd(getSrcDirectory(function(){})[1])
setwd("~/Downloads/R_course/mydata/visualizer")
load("saccades.RData")
saccades<-saccades |> filter(TYPE == "passive")
saccades_summary <- saccades |> mutate(nNum = as.character(nNum))|>
group_by(ID,nNum) |>
summarise(totalSacs = n(),.groups="drop_last") |> mutate(len=nchar(nNum))
saccades_by_len|>
group_by(len) |>
summarise(N = n(),
mean = mean(totalSacs),
std = sd(totalSacs ) )
saccades_by_len <- saccades |> mutate(nNum = as.character(nNum))|>
group_by(ID,nNum) |>
summarise(totalSacs = n(),.groups="drop_last") |> mutate(len=nchar(nNum))
saccades_by_len|>
group_by(len) |>
summarise(N = n(),
mean = mean(totalSacs),
std = sd(totalSacs ) )
p <- ggplot(saccades_by_len, aes(x = as.factor(nchar(as.character(len))), y = totalSacs)) +
geom_boxplot() +
geom_jitter(width = 0.2, color = "blue", alpha = 0.5) +
labs(x = "Saccade Number Length", y = "Number of Saccades", title = "Saccade Count by Length")
p
p <- ggplot(saccades_by_len, aes(x = as.factor(len)), y = totalSacs)) +
p
p <- ggplot(saccades_by_len, aes(x = len), y = totalSacs)) +
p <- ggplot(saccades_by_len, aes(x = len), y = totalSacs))) +
p <- ggplot(saccades_by_len, aes(x = len), y = totalSacs) +
geom_boxplot() +
geom_jitter(width = 0.2, color = "blue", alpha = 0.5) +
labs(x = "Saccade Number Length", y = "Number of Saccades", title = "Saccade Count by Length")
p
p <- ggplot(saccades_by_len, aes(x = as.factor(len)), y = totalSacs) +
geom_boxplot() +
geom_jitter(width = 0.2, color = "blue", alpha = 0.5) +
labs(x = "Saccade Number Length", y = "Number of Saccades", title = "Saccade Count by Length")
p
plot_saccade_summary <- function(df) {
ggplot(df, aes(x = as.factor(len), y = totalSacs)) +
geom_boxplot() +
geom_jitter(width = 0.2, color = "blue", alpha = 0.5) +
labs(x = "Saccade Number Length", y = "Number of Saccades", title = "Saccade Count by Length")
}
p <- plot_saccade_summary(saccades_by_len)
p
ggplot(df, aes(x = as.factor(len), y = totalSacs)) +
geom_boxplot() +
geom_jitter(height = 0,width = 0.2, color = "blue", alpha = 0.5) +
labs(x = "Saccade Number Length", y = "Number of Saccades", title = "Saccade Count by Length")
plot_saccade_summary <- function(df) {
ggplot(df, aes(x = as.factor(len), y = totalSacs)) +
geom_boxplot() +
geom_jitter(height = 0,width = 0.2, color = "blue", alpha = 0.5) +
labs(x = "Saccade Number Length", y = "Number of Saccades", title = "Saccade Count by Length")
}
p <- plot_saccade_summary(saccades_by_len)
p
View(saccades)
(
saccades_by_len|>
group_by(len) |>
summarise(N = n(),
mean = mean(totalSacs),
std = sd(totalSacs ) )
saccades_by_len
saccades_by_len|>
group_by(len) |>
summarise(N = n(),
mean = mean(totalSacs),
std = sd(totalSacs ) )
saccades<-saccades |> filter(TYPE == "passive",CURRENT_SAC_INDEX !=1)
saccades_by_len <- saccades |> mutate(nNum = as.character(nNum))|>
group_by(ID,nNum) |>
mutate(totalSacs = n(),.groups="drop") |> mutate(len=nchar(nNum))
View(saccades_by_len)
saccades_by_len <- saccades |> mutate(nNum = as.character(nNum))|>
group_by(ID,nNum) |>
mutate(totalSacs = n()) |> mutate(len=nchar(nNum))
saccades_by_len <- saccades |> mutate(nNum = as.character(nNum))|>
group_by(ID,nNum) |>
mutate(totalSacs = n()) |> mutate(len=nchar(nNum))|> ungroup()
View(saccades_by_len)
saccades_by_amplitude <- saccades |> mutate(nNum = as.character(nNum))|>
mutate(len=nchar(nNum))
plot_saccade_summary <- function(df) {
ggplot(df, aes(x = as.factor(len), y = CURRENT_SAC_AMPLITUDE)) +
geom_boxplot() +
geom_jitter(height = 0,width = 0.2, color = "blue", alpha = 0.5) +
labs(x = "Saccade Number Length", y = "Number of Saccades", title = "Saccade Count by Length")
}
p <- plot_saccade_summary(saccades_by_amplitude)
p
ggplot(df, aes(x = as.factor(len), y = CURRENT_SAC_AMPLITUDE)) +
geom_boxplot() +
labs(x = "Saccade Number Length", y = "Number of Saccades", title = "Saccade Count by Length")
plot_saccade_summary <- function(df) {
ggplot(df, aes(x = as.factor(len), y = CURRENT_SAC_AMPLITUDE)) +
geom_boxplot() +
labs(x = "Saccade Number Length", y = "Number of Saccades", title = "Saccade Count by Length")
}
p <- plot_saccade_summary(saccades_by_amplitude)
p
load("saccades.RData")
saccades<-saccades |> filter(TYPE == "passive",CURRENT_SAC_INDEX !=1)
saccades_by_amplitude <- saccades |> mutate(nNum = as.character(nNum))|>
mutate(len=nchar(nNum))
plot_saccade_summary <- function(df) {
ggplot(df, aes(x = as.factor(len), y = CURRENT_SAC_AMPLITUDE)) +
geom_boxplot() +
labs(x = "Saccade Number Length", y = "Number of Saccades", title = "Saccade Count by Length")
}
p <- plot_saccade_summary(saccades_by_amplitude)
p
ggplot(df, aes(x = as.factor(len), y = CURRENT_SAC_AMPLITUDE))
ggplot(df, aes(x = as.factor(len), y = CURRENT_SAC_AMPLITUDE))
#labs(x = "Saccade Number Length", y = "Number of Saccades", title = "Saccade Count by Length")
}
p <- plot_saccade_summary(saccades_by_amplitude)
p
